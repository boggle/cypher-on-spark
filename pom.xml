<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.opencypher</groupId>
    <artifactId>cypher-for-apache-spark</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>Cypher for Apache Spark</name>

    <properties>
        <!-- Project settings -->
        <project.build.encoding>UTF-8</project.build.encoding>
        <project.java.version>1.7</project.java.version>
        <project.scala.version>2.11.8</project.scala.version>
        <project.scala.binary.version>2.11</project.scala.binary.version>

        <!-- Used plugins -->
        <plugin.exec-maven.version>1.4.0</plugin.exec-maven.version>
        <plugin.license-maven.version>3.0</plugin.license-maven.version>
        <plugin.maven-compiler.version>3.5.1</plugin.maven-compiler.version>
        <plugin.maven-jar.version>3.0.2</plugin.maven-jar.version>
        <plugin.maven-resources.version>2.7</plugin.maven-resources.version>
        <plugin.maven-shade.version>2.4.3</plugin.maven-shade.version>
        <plugin.scala-maven.version>3.2.1</plugin.scala-maven.version>
        <plugin.scalastyle-maven.version>0.8.0</plugin.scalastyle-maven.version>

        <!-- Used dependencies -->
        <dep.ammonite.version>0.7.0</dep.ammonite.version>
        <dep.cats.version>0.9.0</dep.cats.version>
        <dep.eff.version>2.2.0</dep.eff.version>
        <dep.gdl.version>0.3.0-SNAPSHOT</dep.gdl.version>
        <dep.graphframes.version>0.4.0-spark2.1-s_2.11</dep.graphframes.version>
        <dep.junit.version>4.12</dep.junit.version>
        <dep.mockito.version>1.10.19</dep.mockito.version>
        <dep.multiset.version>0.4</dep.multiset.version>
        <dep.neo4j-spark-connector>2.0.0-M2</dep.neo4j-spark-connector>
        <dep.neo4j.version>3.2.0-alpha08</dep.neo4j.version>
        <dep.scalatest.version>3.0.0</dep.scalatest.version>
        <dep.sourcecode.version>0.1.2</dep.sourcecode.version>
        <dep.spark.version>2.1.0</dep.spark.version>
    </properties>

    <repositories>
        <!-- list of other repositories -->
        <repository>
            <id>SparkPackagesRepo</id>
            <url>http://dl.bintray.com/spark-packages/maven</url>
        </repository>

        <!-- necessary for GDL dependency in tests -->
        <repository>
            <id>dbleipzig</id>
            <name>Database Group Leipzig University</name>
            <url>https://wdiserv1.informatik.uni-leipzig.de:443/archiva/repository/dbleipzig/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/version.txt</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <!-- javac -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${plugin.maven-compiler.version}</version>
                <configuration>
                    <source>${project.java.version}</source>
                    <target>${project.java.version}</target>
                </configuration>
            </plugin>

            <!-- setup scalac -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${plugin.scala-maven.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                            <goal>add-source</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <recompileMode>incremental</recompileMode>
                    <scalaVersion>${project.scala.version}</scalaVersion>
                    <scalaCompatVersion>${project.scala.binary.version}</scalaCompatVersion>
                    <encoding>${project.build.encoding}</encoding>
                    <args>
                        <!-- need to pass encoding to scalac manually -->
                        <arg>-encoding</arg>
                        <arg>${project.build.encoding}</arg>
                        <arg>-target:jvm-1.7</arg>
                        <arg>-unchecked</arg>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                        <arg>–explaintypes</arg>
                        <arg>–optimise</arg>
                        <arg>-Xfuture</arg>
                        <arg>-Ywarn-adapted-args</arg>
                        <arg>-Yopt-warnings:at-inline-failed</arg>
                        <arg>-Yopt:l:project</arg>
                        <!-- Enable once available in 2.11.9 or 2.12.x -->
                        <!-- arg>-Ypartial-unification</arg -->
                    </args>
                    <compilerPlugins>
                        <!-- Remove once -Ypartial-unification is available in 2.11.9 or 2.12.x -->
                        <compilerPlugin>
                            <groupId>com.milessabin</groupId>
                            <artifactId>si2712fix-plugin_2.11.8</artifactId>
                            <version>1.2.0</version>
                        </compilerPlugin>
                    </compilerPlugins>
                </configuration>
            </plugin>

            <!-- scalastyle) -->
            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
                <version>${plugin.scalastyle-maven.version}</version>
                <configuration>
                    <verbose>false</verbose>
                    <failOnViolation>true</failOnViolation>
                    <includeTestSourceDirectory>true</includeTestSourceDirectory>
                    <failOnWarning>false</failOnWarning>
                    <inputEncoding>${project.build.encoding}</inputEncoding>
                    <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
                    <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
                    <configLocation>${project.basedir}/etc/scalastyle_config.xml</configLocation>
                    <outputFile>${basedir}/target/scalastyle-output.xml</outputFile>
                    <outputEncoding>${project.build.encoding}</outputEncoding>
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- add version information to jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${plugin.maven-jar.version}</version>
                <configuration>
                    <archive>
                        <index>true</index>
                        <addMavenDescriptor>true</addMavenDescriptor>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                    <excludes>
                        <exclude>version.txt</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- generate version.txt -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${plugin.maven-resources.version}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/resources</directory>
                                    <includes>
                                        <include>version.txt</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- setup ammonite repl runner -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${plugin.exec-maven.version}</version>
                <configuration>
                    <mainClass>org.opencypher.spark.Shell</mainClass>
                    <classpathScope>test</classpathScope>
                </configuration>
            </plugin>

            <!-- Licenses -->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${plugin.license-maven.version}</version>
                <configuration>
                    <header>license-header</header>
                    <basedir>src</basedir>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>skipShade</id>
            <activation>
                <property>
                    <name>skipShade</name>
                    <value>!true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- shade plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>${plugin.maven-shade.version}</version>
                        <executions>
                            <!-- run shade goal on package phase -->
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <shadedArtifactAttached>true</shadedArtifactAttached>
                                    <shadedClassifierName>standalone-shell</shadedClassifierName>
                                    <createDependencyReducedPom>true</createDependencyReducedPom>
                                    <artifactSet>
                                        <excludes>
                                            <exclude>junit:junit</exclude>
                                            <exclude>jmock:*</exclude>
                                            <exclude>org.scalatest:*</exclude>
                                            <exclude>org.scalacheck:*</exclude>
                                            <exclude>org.apache.maven:lib:tests</exclude>
                                            <exclude>commons-beanutils:*</exclude>
                                            <exclude>aopalliance:*</exclude>
                                            <exclude>javax.inject:*</exclude>
                                        </excludes>
                                    </artifactSet>
                                    <transformers>
                                        <transformer
                                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                            <mainClass>org.opencypher.spark.Shell</mainClass>
                                        </transformer>
                                    </transformers>
                                    <filters>

                                        <filter>
                                            <artifact>jline:jline</artifact>
                                            <excludes>
                                                <exclude>org/fusesource/hawtjni/runtime/Library.class</exclude>
                                                <exclude>org/fusesource/hawtjni/runtime/PointerMath.class</exclude>
                                                <exclude>org/fusesource/hawtjni/runtime/Callback.class</exclude>
                                                <exclude>org/fusesource/hawtjni/runtime/JNIEnv.class</exclude>
                                            </excludes>
                                        </filter>

                                        <filter>
                                            <artifact>org.apache.spark:*</artifact>
                                            <excludes>
                                                <exclude>org/apache/spark/unused/UnusedStubClass.class</exclude>
                                            </excludes>
                                        </filter>

                                        <filter>
                                            <artifact>com.lihaoyi:ammonite-ops_2.11</artifact>
                                            <excludes>
                                                <exclude>ammonite/Constants.class</exclude>
                                                <exclude>ammonite/Constants$.class</exclude>
                                            </excludes>
                                        </filter>

                                        <filter>
                                            <artifact>com.lihaoyi:ammonite-terminal_2.11</artifact>
                                            <excludes>
                                                <exclude>ammonite/Constants.class</exclude>
                                                <exclude>ammonite/Constants$.class</exclude>
                                            </excludes>
                                        </filter>

                                        <filter>
                                            <artifact>org.apache.hadoop:hadoop-yarn-api</artifact>
                                            <excludes>
                                                <exclude>org/apache/hadoop/yarn/util/package-info.class</exclude>
                                                <exclude>org/apache/hadoop/yarn/factories/package-info.class</exclude>
                                                <exclude>org/apache/hadoop/yarn/factory/providers/package-info.class</exclude>
                                            </excludes>
                                        </filter>

                                        <filter>
                                            <artifact>*:*</artifact>
                                            <excludes>
                                                <exclude>META-INF/*.SF</exclude>
                                                <exclude>META-INF/*.DSA</exclude>
                                                <exclude>META-INF/*.RSA</exclude>
                                            </excludes>
                                        </filter>

                                    </filters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <!-- Neo4j -->

        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-cypher-frontend-3.2</artifactId>
            <version>${dep.neo4j.version}</version>
        </dependency>

        <dependency>
            <groupId>neo4j-contrib</groupId>
            <artifactId>neo4j-spark-connector</artifactId>
            <version>${dep.neo4j-spark-connector}</version>
        </dependency>

        <!-- Scala -->

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${project.scala.version}</version>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${project.scala.version}</version>
        </dependency>

        <dependency>
            <groupId>org.typelevel</groupId>
            <artifactId>cats_2.11</artifactId>
            <version>${dep.cats.version}</version>
        </dependency>

        <dependency>
            <groupId>org.atnos</groupId>
            <artifactId>eff_2.11</artifactId>
            <version>${dep.eff.version}</version>
        </dependency>

        <!-- Spark -->

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.11</artifactId>
            <version>${dep.spark.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_2.11</artifactId>
            <version>${dep.spark.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-catalyst_2.11</artifactId>
            <version>${dep.spark.version}</version>
        </dependency>

        <dependency>
            <groupId>graphframes</groupId>
            <artifactId>graphframes</artifactId>
            <version>${dep.graphframes.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-graphx_2.11</artifactId>
            <version>${dep.spark.version}</version>
        </dependency>

        <!-- Utils -->

        <dependency>
            <groupId>com.lihaoyi</groupId>
            <artifactId>ammonite_2.11.8</artifactId>
            <version>${dep.ammonite.version}</version>
        </dependency>

        <dependency>
            <groupId>com.lihaoyi</groupId>
            <artifactId>ammonite-ops_2.11</artifactId>
            <version>${dep.ammonite.version}</version>
        </dependency>

        <dependency>
            <groupId>org.s1ck</groupId>
            <artifactId>gdl</artifactId>
            <version>${dep.gdl.version}</version>
        </dependency>

        <dependency>
            <groupId>io.github.nicolasstucki</groupId>
            <artifactId>multisets_2.11</artifactId>
            <version>${dep.multiset.version}</version>
        </dependency>

        <dependency>
            <groupId>com.lihaoyi</groupId>
            <artifactId>sourcecode_2.11</artifactId>
            <version>${dep.sourcecode.version}</version>
        </dependency>

        <!-- Tests -->

        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-cypher-frontend-3.2</artifactId>
            <version>${dep.neo4j.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_2.11</artifactId>
            <version>${dep.scalatest.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${dep.junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${dep.mockito.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
