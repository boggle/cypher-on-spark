<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.opencypher</groupId>
    <artifactId>cypher-on-spark</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.7</java.version>
        <scala.version>2.11.8</scala.version>
        <scala.binary.version>2.11</scala.binary.version>
    </properties>

    <build>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/version.txt</include>
                </includes>
            </resource>
        </resources>

        <plugins>

            <!-- javac -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!-- setup scalac -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                            <goal>add-source</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <recompileMode>incremental</recompileMode>
                    <scalaVersion>${scala.version}</scalaVersion>
                    <scalaCompatVersion>${scala.binary.version}</scalaCompatVersion>
                    <encoding>UTF-8</encoding>
                    <args>
                        <!-- need to pass encoding to scalac manually -->
                        <arg>-encoding</arg>
                        <arg>UTF-8</arg>
                        <arg>-target:jvm-1.7</arg>
                        <arg>-unchecked</arg>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                        <arg>–explaintypes</arg>
                        <arg>–optimise</arg>
                        <arg>-Xfuture</arg>
                        <arg>-Ywarn-adapted-args</arg>
                        <arg>-Ywarn-dead-code</arg>
                        <arg>-Yopt-warnings:at-inline-failed</arg>
                        <arg>-Yopt:l:project</arg>
                    </args>
                </configuration>
            </plugin>

            <!-- enable scalastyle (configured below in pluginManagement) -->
            <plugin>
                <groupId>org.scalastyle</groupId>
                <artifactId>scalastyle-maven-plugin</artifactId>
            </plugin>

            <!-- add version information to jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <archive>
                        <index>true</index>
                        <addMavenDescriptor>true</addMavenDescriptor>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                    <excludes>
                        <exclude>version.txt</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- generate version.txt -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/resources</directory>
                                    <includes>
                                        <include>version.txt</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- setup ammonite repl runner -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <configuration>
                    <mainClass>org.opencypher.spark.shell.Shell</mainClass>
                    <classpathScope>test</classpathScope>
                </configuration>
            </plugin>

        </plugins>

        <pluginManagement>

            <plugins>
                <plugin>
                    <groupId>org.scalastyle</groupId>
                    <artifactId>scalastyle-maven-plugin</artifactId>
                    <version>0.8.0</version>
                    <configuration>
                        <verbose>false</verbose>
                        <failOnViolation>true</failOnViolation>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <failOnWarning>false</failOnWarning>
                        <inputEncoding>UTF-8</inputEncoding>
                        <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
                        <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
                        <configLocation>${project.basedir}/etc/scalastyle_config.xml</configLocation>
                        <outputFile>${basedir}/target/scalastyle-output.xml</outputFile>
                        <outputEncoding>UTF-8</outputEncoding>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>test</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>

        </pluginManagement>

    </build>

    <profiles>
        <profile>
            <id>skipShade</id>
            <activation>
                <property>
                    <name>skipShade</name>
                    <value>!true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- shade plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>2.4.3</version>
                        <executions>
                            <!-- run shade goal on package phase -->
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <shadedArtifactAttached>true</shadedArtifactAttached>
                                    <shadedClassifierName>standalone-shell</shadedClassifierName>
                                    <createDependencyReducedPom>true</createDependencyReducedPom>
                                    <artifactSet>
                                        <excludes>
                                            <exclude>junit:junit</exclude>
                                            <exclude>jmock:*</exclude>
                                            <exclude>org.scalatest:*</exclude>
                                            <exclude>org.scalacheck:*</exclude>
                                            <exclude>org.apache.maven:lib:tests</exclude>
                                            <exclude>commons-beanutils:*</exclude>
                                            <exclude>aopalliance:*</exclude>
                                            <exclude>javax.inject:*</exclude>
                                        </excludes>
                                    </artifactSet>
                                    <transformers>
                                        <transformer
                                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                            <mainClass>org.opencypher.spark.Shell</mainClass>
                                        </transformer>
                                    </transformers>
                                    <filters>

                                        <filter>
                                            <artifact>jline:jline</artifact>
                                            <excludes>
                                                <exclude>org/fusesource/hawtjni/runtime/Library.class</exclude>
                                                <exclude>org/fusesource/hawtjni/runtime/PointerMath.class</exclude>
                                                <exclude>org/fusesource/hawtjni/runtime/Callback.class</exclude>
                                                <exclude>org/fusesource/hawtjni/runtime/JNIEnv.class</exclude>
                                            </excludes>
                                        </filter>

                                        <filter>
                                            <artifact>org.apache.spark:*</artifact>
                                            <excludes>
                                                <exclude>org/apache/spark/unused/UnusedStubClass.class</exclude>
                                            </excludes>
                                        </filter>

                                        <filter>
                                            <artifact>com.lihaoyi:ammonite-ops_2.11</artifact>
                                            <excludes>
                                                <exclude>ammonite/Constants.class</exclude>
                                                <exclude>ammonite/Constants$.class</exclude>
                                            </excludes>
                                        </filter>

                                        <filter>
                                            <artifact>com.lihaoyi:ammonite-terminal_2.11</artifact>
                                            <excludes>
                                                <exclude>ammonite/Constants.class</exclude>
                                                <exclude>ammonite/Constants$.class</exclude>
                                            </excludes>
                                        </filter>

                                        <filter>
                                            <artifact>org.apache.hadoop:hadoop-yarn-api</artifact>
                                            <excludes>
                                                <exclude>org/apache/hadoop/yarn/util/package-info.class</exclude>
                                                <exclude>org/apache/hadoop/yarn/factories/package-info.class</exclude>
                                                <exclude>org/apache/hadoop/yarn/factory/providers/package-info.class</exclude>
                                            </excludes>
                                        </filter>

                                        <filter>
                                            <artifact>*:*</artifact>
                                            <excludes>
                                                <exclude>META-INF/*.SF</exclude>
                                                <exclude>META-INF/*.DSA</exclude>
                                                <exclude>META-INF/*.RSA</exclude>
                                            </excludes>
                                        </filter>

                                    </filters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_2.11</artifactId>
            <version>2.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_2.11</artifactId>
            <version>2.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-catalyst_2.11</artifactId>
            <version>2.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-graphx_2.11</artifactId>
            <version>2.0.0</version>
        </dependency>

        <dependency>
            <groupId>com.lihaoyi</groupId>
            <artifactId>ammonite_2.11.8</artifactId>
            <version>0.7.0</version>
        </dependency>

        <dependency>
            <groupId>com.lihaoyi</groupId>
            <artifactId>ammonite-ops_2.11</artifactId>
            <version>0.7.0</version>
        </dependency>

        <dependency>
            <groupId>com.lihaoyi</groupId>
            <artifactId>sourcecode_2.11</artifactId>
            <version>0.1.2</version>
        </dependency>

        <!-- Tests -->

        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_2.11</artifactId>
            <version>3.0.0</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <!--<dependency>-->
        <!--<groupId>org.scalacheck</groupId>-->
        <!--<artifactId>scalacheck_2.11</artifactId>-->
        <!--<version>1.13.0</version>-->
        <!--<scope>test</scope>-->
        <!--</dependency>-->

    </dependencies>

</project>
